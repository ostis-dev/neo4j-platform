# Generated from sc/scs/scs.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2>")
        buf.write("\u0194\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\3\2\3\2\3\3\3\3\3")
        buf.write("\3\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6")
        buf.write("\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13")
        buf.write("\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3")
        buf.write("\16\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\21")
        buf.write("\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24")
        buf.write("\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\27")
        buf.write("\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32\3\32")
        buf.write("\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34")
        buf.write("\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37")
        buf.write("\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3\"\3")
        buf.write("\"\3\"\3#\3#\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3")
        buf.write("&\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3")
        buf.write(")\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\60\3")
        buf.write("\61\3\61\3\61\3\62\6\62\u0133\n\62\r\62\16\62\u0134\3")
        buf.write("\63\3\63\6\63\u0139\n\63\r\63\16\63\u013a\3\64\3\64\3")
        buf.write("\64\3\65\3\65\5\65\u0142\n\65\3\66\3\66\5\66\u0146\n\66")
        buf.write("\3\67\3\67\3\67\38\38\38\39\39\39\39\39\79\u0153\n9\f")
        buf.write("9\169\u0156\139\39\39\59\u015a\n9\3:\3:\3:\3:\7:\u0160")
        buf.write("\n:\f:\16:\u0163\13:\3:\3:\3;\3;\3;\5;\u016a\n;\3<\3<")
        buf.write("\3<\3<\3=\3=\3=\3=\7=\u0174\n=\f=\16=\u0177\13=\3=\5=")
        buf.write("\u017a\n=\3=\3=\3=\3=\3>\3>\3>\3>\7>\u0184\n>\f>\16>\u0187")
        buf.write("\13>\3>\3>\3>\3>\3>\3?\3?\3?\3?\3@\3@\3@\3\u0185\2A\3")
        buf.write("\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16")
        buf.write("\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61")
        buf.write("\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*")
        buf.write("S+U,W-Y.[/]\60_\61a\62c\63e\64g\2i\2k\2m\65o\66q\67s8")
        buf.write("u9w:y;{<}=\177>\3\2\n\7\2\60\60\62;C\\aac|\6\2\62;C\\")
        buf.write("aac|\3\2]_\4\2,,]_\3\2$$\5\2\f\f\17\17\u202a\u202b\4\2")
        buf.write("\f\f\17\17\5\2\13\f\17\17\"\"\2\u019c\2\3\3\2\2\2\2\5")
        buf.write("\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2")
        buf.write("\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2")
        buf.write("\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2")
        buf.write("\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2")
        buf.write("\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61")
        buf.write("\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2")
        buf.write("\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3")
        buf.write("\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M")
        buf.write("\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2")
        buf.write("W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2")
        buf.write("\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2m\3\2\2\2\2o\3\2\2")
        buf.write("\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2")
        buf.write("\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\3\u0081\3\2\2")
        buf.write("\2\5\u0083\3\2\2\2\7\u0086\3\2\2\2\t\u008a\3\2\2\2\13")
        buf.write("\u008e\3\2\2\2\r\u0093\3\2\2\2\17\u0095\3\2\2\2\21\u0097")
        buf.write("\3\2\2\2\23\u009a\3\2\2\2\25\u009d\3\2\2\2\27\u00a1\3")
        buf.write("\2\2\2\31\u00a5\3\2\2\2\33\u00a9\3\2\2\2\35\u00ad\3\2")
        buf.write("\2\2\37\u00b0\3\2\2\2!\u00b3\3\2\2\2#\u00b7\3\2\2\2%\u00bb")
        buf.write("\3\2\2\2\'\u00bf\3\2\2\2)\u00c3\3\2\2\2+\u00c6\3\2\2\2")
        buf.write("-\u00c9\3\2\2\2/\u00cd\3\2\2\2\61\u00d1\3\2\2\2\63\u00d5")
        buf.write("\3\2\2\2\65\u00d9\3\2\2\2\67\u00de\3\2\2\29\u00e3\3\2")
        buf.write("\2\2;\u00e7\3\2\2\2=\u00eb\3\2\2\2?\u00f0\3\2\2\2A\u00f5")
        buf.write("\3\2\2\2C\u00fa\3\2\2\2E\u00ff\3\2\2\2G\u0103\3\2\2\2")
        buf.write("I\u0107\3\2\2\2K\u010c\3\2\2\2M\u0111\3\2\2\2O\u0116\3")
        buf.write("\2\2\2Q\u011b\3\2\2\2S\u011f\3\2\2\2U\u0121\3\2\2\2W\u0123")
        buf.write("\3\2\2\2Y\u0125\3\2\2\2[\u0127\3\2\2\2]\u0129\3\2\2\2")
        buf.write("_\u012b\3\2\2\2a\u012e\3\2\2\2c\u0132\3\2\2\2e\u0136\3")
        buf.write("\2\2\2g\u013c\3\2\2\2i\u0141\3\2\2\2k\u0145\3\2\2\2m\u0147")
        buf.write("\3\2\2\2o\u014a\3\2\2\2q\u0159\3\2\2\2s\u015b\3\2\2\2")
        buf.write("u\u0169\3\2\2\2w\u016b\3\2\2\2y\u016f\3\2\2\2{\u017f\3")
        buf.write("\2\2\2}\u018d\3\2\2\2\177\u0191\3\2\2\2\u0081\u0082\7")
        buf.write("a\2\2\u0082\4\3\2\2\2\u0083\u0084\7>\2\2\u0084\u0085\7")
        buf.write("@\2\2\u0085\6\3\2\2\2\u0086\u0087\7>\2\2\u0087\u0088\7")
        buf.write("?\2\2\u0088\u0089\7@\2\2\u0089\b\3\2\2\2\u008a\u008b\7")
        buf.write("a\2\2\u008b\u008c\7>\2\2\u008c\u008d\7@\2\2\u008d\n\3")
        buf.write("\2\2\2\u008e\u008f\7a\2\2\u008f\u0090\7>\2\2\u0090\u0091")
        buf.write("\7?\2\2\u0091\u0092\7@\2\2\u0092\f\3\2\2\2\u0093\u0094")
        buf.write("\7@\2\2\u0094\16\3\2\2\2\u0095\u0096\7>\2\2\u0096\20\3")
        buf.write("\2\2\2\u0097\u0098\7?\2\2\u0098\u0099\7@\2\2\u0099\22")
        buf.write("\3\2\2\2\u009a\u009b\7>\2\2\u009b\u009c\7?\2\2\u009c\24")
        buf.write("\3\2\2\2\u009d\u009e\7a\2\2\u009e\u009f\7?\2\2\u009f\u00a0")
        buf.write("\7@\2\2\u00a0\26\3\2\2\2\u00a1\u00a2\7a\2\2\u00a2\u00a3")
        buf.write("\7>\2\2\u00a3\u00a4\7?\2\2\u00a4\30\3\2\2\2\u00a5\u00a6")
        buf.write("\7\60\2\2\u00a6\u00a7\7\60\2\2\u00a7\u00a8\7@\2\2\u00a8")
        buf.write("\32\3\2\2\2\u00a9\u00aa\7>\2\2\u00aa\u00ab\7\60\2\2\u00ab")
        buf.write("\u00ac\7\60\2\2\u00ac\34\3\2\2\2\u00ad\u00ae\7/\2\2\u00ae")
        buf.write("\u00af\7@\2\2\u00af\36\3\2\2\2\u00b0\u00b1\7>\2\2\u00b1")
        buf.write("\u00b2\7/\2\2\u00b2 \3\2\2\2\u00b3\u00b4\7/\2\2\u00b4")
        buf.write("\u00b5\7~\2\2\u00b5\u00b6\7@\2\2\u00b6\"\3\2\2\2\u00b7")
        buf.write("\u00b8\7>\2\2\u00b8\u00b9\7~\2\2\u00b9\u00ba\7/\2\2\u00ba")
        buf.write("$\3\2\2\2\u00bb\u00bc\7/\2\2\u00bc\u00bd\7\61\2\2\u00bd")
        buf.write("\u00be\7@\2\2\u00be&\3\2\2\2\u00bf\u00c0\7>\2\2\u00c0")
        buf.write("\u00c1\7\61\2\2\u00c1\u00c2\7/\2\2\u00c2(\3\2\2\2\u00c3")
        buf.write("\u00c4\7\u0080\2\2\u00c4\u00c5\7@\2\2\u00c5*\3\2\2\2\u00c6")
        buf.write("\u00c7\7>\2\2\u00c7\u00c8\7\u0080\2\2\u00c8,\3\2\2\2\u00c9")
        buf.write("\u00ca\7\u0080\2\2\u00ca\u00cb\7~\2\2\u00cb\u00cc\7@\2")
        buf.write("\2\u00cc.\3\2\2\2\u00cd\u00ce\7>\2\2\u00ce\u00cf\7~\2")
        buf.write("\2\u00cf\u00d0\7\u0080\2\2\u00d0\60\3\2\2\2\u00d1\u00d2")
        buf.write("\7\u0080\2\2\u00d2\u00d3\7\61\2\2\u00d3\u00d4\7@\2\2\u00d4")
        buf.write("\62\3\2\2\2\u00d5\u00d6\7>\2\2\u00d6\u00d7\7\61\2\2\u00d7")
        buf.write("\u00d8\7\u0080\2\2\u00d8\64\3\2\2\2\u00d9\u00da\7a\2\2")
        buf.write("\u00da\u00db\7\60\2\2\u00db\u00dc\7\60\2\2\u00dc\u00dd")
        buf.write("\7@\2\2\u00dd\66\3\2\2\2\u00de\u00df\7a\2\2\u00df\u00e0")
        buf.write("\7>\2\2\u00e0\u00e1\7\60\2\2\u00e1\u00e2\7\60\2\2\u00e2")
        buf.write("8\3\2\2\2\u00e3\u00e4\7a\2\2\u00e4\u00e5\7/\2\2\u00e5")
        buf.write("\u00e6\7@\2\2\u00e6:\3\2\2\2\u00e7\u00e8\7a\2\2\u00e8")
        buf.write("\u00e9\7>\2\2\u00e9\u00ea\7/\2\2\u00ea<\3\2\2\2\u00eb")
        buf.write("\u00ec\7a\2\2\u00ec\u00ed\7/\2\2\u00ed\u00ee\7~\2\2\u00ee")
        buf.write("\u00ef\7@\2\2\u00ef>\3\2\2\2\u00f0\u00f1\7a\2\2\u00f1")
        buf.write("\u00f2\7>\2\2\u00f2\u00f3\7~\2\2\u00f3\u00f4\7/\2\2\u00f4")
        buf.write("@\3\2\2\2\u00f5\u00f6\7a\2\2\u00f6\u00f7\7/\2\2\u00f7")
        buf.write("\u00f8\7\61\2\2\u00f8\u00f9\7@\2\2\u00f9B\3\2\2\2\u00fa")
        buf.write("\u00fb\7a\2\2\u00fb\u00fc\7>\2\2\u00fc\u00fd\7\61\2\2")
        buf.write("\u00fd\u00fe\7/\2\2\u00feD\3\2\2\2\u00ff\u0100\7a\2\2")
        buf.write("\u0100\u0101\7\u0080\2\2\u0101\u0102\7@\2\2\u0102F\3\2")
        buf.write("\2\2\u0103\u0104\7a\2\2\u0104\u0105\7>\2\2\u0105\u0106")
        buf.write("\7\u0080\2\2\u0106H\3\2\2\2\u0107\u0108\7a\2\2\u0108\u0109")
        buf.write("\7\u0080\2\2\u0109\u010a\7~\2\2\u010a\u010b\7@\2\2\u010b")
        buf.write("J\3\2\2\2\u010c\u010d\7a\2\2\u010d\u010e\7>\2\2\u010e")
        buf.write("\u010f\7~\2\2\u010f\u0110\7\u0080\2\2\u0110L\3\2\2\2\u0111")
        buf.write("\u0112\7a\2\2\u0112\u0113\7\u0080\2\2\u0113\u0114\7\61")
        buf.write("\2\2\u0114\u0115\7@\2\2\u0115N\3\2\2\2\u0116\u0117\7a")
        buf.write("\2\2\u0117\u0118\7>\2\2\u0118\u0119\7\61\2\2\u0119\u011a")
        buf.write("\7\u0080\2\2\u011aP\3\2\2\2\u011b\u011c\7\60\2\2\u011c")
        buf.write("\u011d\7\60\2\2\u011d\u011e\7\60\2\2\u011eR\3\2\2\2\u011f")
        buf.write("\u0120\7?\2\2\u0120T\3\2\2\2\u0121\u0122\7*\2\2\u0122")
        buf.write("V\3\2\2\2\u0123\u0124\7+\2\2\u0124X\3\2\2\2\u0125\u0126")
        buf.write("\7=\2\2\u0126Z\3\2\2\2\u0127\u0128\7}\2\2\u0128\\\3\2")
        buf.write("\2\2\u0129\u012a\7\177\2\2\u012a^\3\2\2\2\u012b\u012c")
        buf.write("\7*\2\2\u012c\u012d\7,\2\2\u012d`\3\2\2\2\u012e\u012f")
        buf.write("\7,\2\2\u012f\u0130\7+\2\2\u0130b\3\2\2\2\u0131\u0133")
        buf.write("\t\2\2\2\u0132\u0131\3\2\2\2\u0133\u0134\3\2\2\2\u0134")
        buf.write("\u0132\3\2\2\2\u0134\u0135\3\2\2\2\u0135d\3\2\2\2\u0136")
        buf.write("\u0138\7B\2\2\u0137\u0139\t\3\2\2\u0138\u0137\3\2\2\2")
        buf.write("\u0139\u013a\3\2\2\2\u013a\u0138\3\2\2\2\u013a\u013b\3")
        buf.write("\2\2\2\u013bf\3\2\2\2\u013c\u013d\7^\2\2\u013d\u013e\4")
        buf.write("]_\2\u013eh\3\2\2\2\u013f\u0142\5g\64\2\u0140\u0142\n")
        buf.write("\4\2\2\u0141\u013f\3\2\2\2\u0141\u0140\3\2\2\2\u0142j")
        buf.write("\3\2\2\2\u0143\u0146\5g\64\2\u0144\u0146\n\5\2\2\u0145")
        buf.write("\u0143\3\2\2\2\u0145\u0144\3\2\2\2\u0146l\3\2\2\2\u0147")
        buf.write("\u0148\7]\2\2\u0148\u0149\7,\2\2\u0149n\3\2\2\2\u014a")
        buf.write("\u014b\7,\2\2\u014b\u014c\7_\2\2\u014cp\3\2\2\2\u014d")
        buf.write("\u014e\7]\2\2\u014e\u015a\7_\2\2\u014f\u0150\7]\2\2\u0150")
        buf.write("\u0154\5k\66\2\u0151\u0153\5i\65\2\u0152\u0151\3\2\2\2")
        buf.write("\u0153\u0156\3\2\2\2\u0154\u0152\3\2\2\2\u0154\u0155\3")
        buf.write("\2\2\2\u0155\u0157\3\2\2\2\u0156\u0154\3\2\2\2\u0157\u0158")
        buf.write("\7_\2\2\u0158\u015a\3\2\2\2\u0159\u014d\3\2\2\2\u0159")
        buf.write("\u014f\3\2\2\2\u015ar\3\2\2\2\u015b\u0161\7$\2\2\u015c")
        buf.write("\u0160\n\6\2\2\u015d\u015e\7^\2\2\u015e\u0160\7$\2\2\u015f")
        buf.write("\u015c\3\2\2\2\u015f\u015d\3\2\2\2\u0160\u0163\3\2\2\2")
        buf.write("\u0161\u015f\3\2\2\2\u0161\u0162\3\2\2\2\u0162\u0164\3")
        buf.write("\2\2\2\u0163\u0161\3\2\2\2\u0164\u0165\7$\2\2\u0165t\3")
        buf.write("\2\2\2\u0166\u016a\7<\2\2\u0167\u0168\7<\2\2\u0168\u016a")
        buf.write("\7<\2\2\u0169\u0166\3\2\2\2\u0169\u0167\3\2\2\2\u016a")
        buf.write("v\3\2\2\2\u016b\u016c\t\7\2\2\u016c\u016d\3\2\2\2\u016d")
        buf.write("\u016e\b<\2\2\u016ex\3\2\2\2\u016f\u0170\7\61\2\2\u0170")
        buf.write("\u0171\7\61\2\2\u0171\u0175\3\2\2\2\u0172\u0174\n\b\2")
        buf.write("\2\u0173\u0172\3\2\2\2\u0174\u0177\3\2\2\2\u0175\u0173")
        buf.write("\3\2\2\2\u0175\u0176\3\2\2\2\u0176\u0179\3\2\2\2\u0177")
        buf.write("\u0175\3\2\2\2\u0178\u017a\7\17\2\2\u0179\u0178\3\2\2")
        buf.write("\2\u0179\u017a\3\2\2\2\u017a\u017b\3\2\2\2\u017b\u017c")
        buf.write("\7\f\2\2\u017c\u017d\3\2\2\2\u017d\u017e\b=\2\2\u017e")
        buf.write("z\3\2\2\2\u017f\u0180\7\61\2\2\u0180\u0181\7,\2\2\u0181")
        buf.write("\u0185\3\2\2\2\u0182\u0184\13\2\2\2\u0183\u0182\3\2\2")
        buf.write("\2\u0184\u0187\3\2\2\2\u0185\u0186\3\2\2\2\u0185\u0183")
        buf.write("\3\2\2\2\u0186\u0188\3\2\2\2\u0187\u0185\3\2\2\2\u0188")
        buf.write("\u0189\7,\2\2\u0189\u018a\7\61\2\2\u018a\u018b\3\2\2\2")
        buf.write("\u018b\u018c\b>\2\2\u018c|\3\2\2\2\u018d\u018e\t\t\2\2")
        buf.write("\u018e\u018f\3\2\2\2\u018f\u0190\b?\2\2\u0190~\3\2\2\2")
        buf.write("\u0191\u0192\7=\2\2\u0192\u0193\7=\2\2\u0193\u0080\3\2")
        buf.write("\2\2\17\2\u0134\u013a\u0141\u0145\u0154\u0159\u015f\u0161")
        buf.write("\u0169\u0175\u0179\u0185\3\2\3\2")
        return buf.getvalue()


class scsLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    ID_SYSTEM = 49
    ALIAS_SYMBOLS = 50
    CONTOUR_BEGIN = 51
    CONTOUR_END = 52
    CONTENT_BODY = 53
    LINK = 54
    EDGE_ATTR = 55
    LINE_TERMINATOR = 56
    LINE_COMMENT = 57
    MULTINE_COMMENT = 58
    WS = 59
    SENTENCE_SEP = 60

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'_'", "'<>'", "'<=>'", "'_<>'", "'_<=>'", "'>'", "'<'", "'=>'", 
            "'<='", "'_=>'", "'_<='", "'..>'", "'<..'", "'->'", "'<-'", 
            "'-|>'", "'<|-'", "'-/>'", "'</-'", "'~>'", "'<~'", "'~|>'", 
            "'<|~'", "'~/>'", "'</~'", "'_..>'", "'_<..'", "'_->'", "'_<-'", 
            "'_-|>'", "'_<|-'", "'_-/>'", "'_</-'", "'_~>'", "'_<~'", "'_~|>'", 
            "'_<|~'", "'_~/>'", "'_</~'", "'...'", "'='", "'('", "')'", 
            "';'", "'{'", "'}'", "'(*'", "'*)'", "'[*'", "'*]'", "';;'" ]

    symbolicNames = [ "<INVALID>",
            "ID_SYSTEM", "ALIAS_SYMBOLS", "CONTOUR_BEGIN", "CONTOUR_END", 
            "CONTENT_BODY", "LINK", "EDGE_ATTR", "LINE_TERMINATOR", "LINE_COMMENT", 
            "MULTINE_COMMENT", "WS", "SENTENCE_SEP" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "ID_SYSTEM", "ALIAS_SYMBOLS", 
                  "CONTENT_ESCAPED", "CONTENT_SYBMOL", "CONTENT_SYBMOL_FIRST_END", 
                  "CONTOUR_BEGIN", "CONTOUR_END", "CONTENT_BODY", "LINK", 
                  "EDGE_ATTR", "LINE_TERMINATOR", "LINE_COMMENT", "MULTINE_COMMENT", 
                  "WS", "SENTENCE_SEP" ]

    grammarFileName = "scs.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


